name: Docker Build and Push to DockerHub
env:
  DOCKER_CLI_EXPERIMENTAL: enabled

on:
  release:
    types: [published]

jobs:
  push:
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            runner: ubuntu-latest
          - platform: linux/arm64
            runner: ubuntu-arm64
    runs-on: ${{ matrix.runner }}
    name: Build and push sphinx-nav-fiber image
    env:
      ACTIONS_ALLOW_UNSECURE_COMMANDS: true
    steps:
      - name: Check out from Git
        uses: actions/checkout@v4
      - name: Test env
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Test print env
        run: |
          echo $RELEASE_TAG
          echo ${{ env.RELEASE_TAG }}
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        id: buildx
      - name: Show available buildx platforms
        run: echo ${{ steps.buildx.outputs.platforms }}
      - name: Cache Docker layers
        uses: actions/cache@v4
        id: cache
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}-${{ matrix.platform }}
          restore-keys: |
            ${{ runner.os }}-buildx-${{ matrix.platform }}-
      - name: Run Docker buildx
        run: |
          PLATFORM_TAG=$(echo ${{ matrix.platform }} | tr '/' '-')
          docker buildx build \
          --platform ${{ matrix.platform }} \
          --tag "${{ secrets.DOCKER_HUB_USER }}/sphinx-nav-fiber:${{ env.RELEASE_TAG }}-${PLATFORM_TAG}" \
          --cache-from "type=registry,ref=${{ secrets.DOCKER_HUB_USER }}/sphinx-nav-fiber:cache-${PLATFORM_TAG}" \
          --cache-to "type=registry,image-manifest=true,oci-mediatypes=true,mode=max,ref=${{ secrets.DOCKER_HUB_USER }}/sphinx-nav-fiber:cache-${PLATFORM_TAG}" \
          --output "type=registry" ./

  create-manifest:
    runs-on: ubuntu-latest
    needs: push
    name: Create multi-platform manifest
    steps:
      - name: Check out from Git
        uses: actions/checkout@v4
      - name: Test env
        run: echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      - name: Create and push multi-platform manifest
        run: |
          docker buildx imagetools create \
            --tag "${{ secrets.DOCKER_HUB_USER }}/sphinx-nav-fiber:${{ env.RELEASE_TAG }}" \
            --tag "${{ secrets.DOCKER_HUB_USER }}/sphinx-nav-fiber:latest" \
            "${{ secrets.DOCKER_HUB_USER }}/sphinx-nav-fiber:${{ env.RELEASE_TAG }}-linux-amd64" \
            "${{ secrets.DOCKER_HUB_USER }}/sphinx-nav-fiber:${{ env.RELEASE_TAG }}-linux-arm64"
